openapi: "3.0.0"
info:
  title: "textsummarizer_backend_textsummarizer API"
  description: "textsummarizer_backend_textsummarizer API"
  version: "1.0.0"
  contact:
    email: "christopher.werner1@gmx.net"
    name: "Christopher Werner"
servers:
  - url: localhost:8080
    description: local
  - url: "http://voevoda.cvwerner.de"
    description: prod
paths:
  /api/v1/auth/login:
    post:
      description: "Takes a # and returns an access and refresh JWT token upon correct secret"
      parameters:
        - name: "deviceId"
          in: "header"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Missing deviceId Header"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing deviceId header"
        "401":
          description: "Unauthorized"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Wrong password."
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/v1/auth/refresh:
    post:
      description: "Takes the refreshToken generated by login and returns an access JWT token when handed the correct refresh token and deviceId"
      parameters:
        - name: "deviceId"
          in: "header"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        "400":
          description: "Missing deviceId Header"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing deviceId header"
        "401":
          description: "Unauthorized - DeviceId doesn't yet exist in the database, has thus never logged in"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Can't refresh for unregistered device with id: DEVICE_ID."
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
  /api/v1/queries:
    post:
      description: "Used to process a query to an AI model"
      parameters:
        - name: "deviceId"
          in: "header"
          required: true
          schema:
            type: "string"
            description: "UUID to identify the device which the request is coming from"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MobileQueryDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
        "400":
          description: "Missing deviceId header"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing deviceId header"
  /api/v1/queries/{id}:
    get:
      description: "Endpoint for receiving a certain query"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "string"
        "404":
          description: "Not Found"
          content:
            'text/plain':
              schema:
                type: "object"
        "400":
          description: "Bad Request"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid id"
  /api/v1/subscription:
    get:
      description: ""
      parameters:
        - name: "deviceId"
          in: "header"
          required: false
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Device with id: $deviceId is not registered."
                Example#2:
                  value: "Missing deviceId header."
        "200":
          description: "OK"
          content:
            'text/plain':
              schema:
                type: "string"
                format: "uuid"
        "404":
          description: "Not Found"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Subscription not found for device with id: $deviceId."
  /api/v1/test:
    get:
      description: "Endpoint for testing if the application is up and running :)"
      responses:
        "200":
          description: "OK"
          content:
            'text/plain':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
components:
  schemas:
    RefreshTokenRequest:
      description: Contains the refreshToken
      type: object
      properties:
        refreshToken:
          type: string
    RefreshTokenResponse:
      description: Response for granting a new accessToken
      type: object
      properties:
        accessToken:
          type: string
    AuthResponse:
      description: Response containing the accessToken and refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    MobileQueryDto:
      type: "object"
      properties:
        queryText:
          type: "string"
        queryType:
          type: "string"
          enum:
            - "SUMMARIZE"
            - "ESSAY"
            - "QUESTION"
            - "TRANSLATE"
      required:
        - "queryText"
        - "queryType"